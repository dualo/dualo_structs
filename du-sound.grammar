<?xml version="1.0" encoding="UTF-8"?>
<ufwb version="1.17">
    <grammar name="du-sound" start="id:6" author="Kniebihler Nicolas" fileextension="dusound">
        <description>Grammar for DUSOUND files</description>
        <structure name="DUSOUND file" id="6" length="0" alignment="1" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <structref name="s_instr_header" id="8" structure="id:7"/>
            <structref name="sound_instr" id="10" structure="id:9"/>
            <number name="nbSampleInLayer1" id="11" type="integer" length="1"/>
            <number name="nbLayers" id="12" type="integer" length="1"/>
            <structure name="nbSamplesPair" id="13" length="2" repeatmin="0" repeatmax="nbLayers - 1">
                <number name="nbSampleInLayer" id="14" type="integer" length="1"/>
                <binary name="zero" mustmatch="yes" id="15" length="1">
                    <fixedvalues>
                        <fixedvalue name="value" value="00"/>
                    </fixedvalues>
                </binary>
            </structure>
            <structure name="dream_ip_array" id="17" length="ip_size - 2*nbLayers" alignment="0">
                <structref name="dream_ip" id="19" structure="id:18"/>
            </structure>
            <structure name="dream_sp_array" id="21" length="sp_size">
                <structref name="dream_sp" id="23" structure="id:22"/>
            </structure>
            <scriptelement name="samples" id="25">
                <script name="unnamed" type="Generic">
                    <source language="Lua">logSrc = currentMapper:getCurrentLogSrc()
currentResults = currentMapper:getCurrentResults()

nbDreamSp = currentResults:getResultByName(&quot;dream_sp&quot;):getIteration() + 1

logSrc:logMessage(_VERSION, 111, synalysis.SEVERITY_INFO, string.format(&quot;nb iterations: %d&quot;, nbDreamSp))

dream_sps = {}

currentDreamSp = currentResults:getResultByName(&quot;size_wav&quot;)
currentWavAddress = currentResults:getResultByName(&quot;wav_address&quot;)
for i = nbDreamSp,1,-1 do
	dream_sps[i] = currentDreamSp

	if i &gt; 1 then
		previousWavAddress = currentResults:getPrevResult(currentWavAddress)
		while previousWavAddress:getName() ~= &quot;wav_address&quot; do
			previousWavAddress = currentResults:getPrevResult(previousWavAddress)
		end
		currentWavAddress_bytePos = currentWavAddress:getStartBytePos()
		currentWavAddressValue = (currentMapper:getCurrentByteView():readByte(currentWavAddress_bytePos+3)) * 16777216 + (currentMapper:getCurrentByteView():readByte(currentWavAddress_bytePos+2)) * 65536 + (currentMapper:getCurrentByteView():readByte(currentWavAddress_bytePos+1)) * 256 + (currentMapper:getCurrentByteView():readByte(currentWavAddress_bytePos))
		previousWavAddress_bytePos = previousWavAddress:getStartBytePos()
		previousWavAddressValue = (currentMapper:getCurrentByteView():readByte(previousWavAddress_bytePos+3)) * 16777216 + (currentMapper:getCurrentByteView():readByte(previousWavAddress_bytePos+2)) * 65536 + (currentMapper:getCurrentByteView():readByte(previousWavAddress_bytePos+1)) * 256 + (currentMapper:getCurrentByteView():readByte(previousWavAddress_bytePos))
		if currentWavAddressValue == previousWavAddressValue then
			dream_sps[i] = 0
		end
		currentWavAddress = previousWavAddress

		previousResult = currentResults:getPrevResult(currentDreamSp)
		while previousResult:getName() ~= &quot;size_wav&quot; do
			previousResult = currentResults:getPrevResult(previousResult)
		end
		currentDreamSp = previousResult
	end
end

grammar = currentMapper:getCurrentGrammar()
structure = grammar:getStructureByName(&quot;Elements&quot;)
element = structure:getElementByName(&quot;Sample&quot;)

for i = 1,nbDreamSp do
	if dream_sps[i] ~= 0 then
		current_bytePos = dream_sps[i]:getStartBytePos()
		sample_size = (currentMapper:getCurrentByteView():readByte(current_bytePos+3)) * 16777216 + (currentMapper:getCurrentByteView():readByte(current_bytePos+2)) * 65536 + (currentMapper:getCurrentByteView():readByte(current_bytePos+1)) * 256 + (currentMapper:getCurrentByteView():readByte(current_bytePos))
		sample_size = sample_size * 2
		logSrc:logMessage(_VERSION, 111, synalysis.SEVERITY_INFO, string.format(&quot;it %d:&quot;, i))
		logSrc:logMessage(_VERSION, 111, synalysis.SEVERITY_INFO, string.format(&quot;%d&quot;, sample_size))
		currentMapper:mapElementWithSize(element, sample_size)
	end
end
</source>
                </script>
            </scriptelement>
            <structure name="mappingL" id="26" length="if(mapping_addr, 116*32, 0)">
                <structref name="s_note" id="28" structure="id:27"/>
            </structure>
            <structure name="mappingS" id="30" length="if(and(mapping_addr, above(SW_version, 2)), 52*32, 0)" alignment="0">
                <structref name="s_note" id="31" structure="id:27"/>
            </structure>
            <binary name="metadata" id="33" length="select(meta_addr, 0, 0, full_size - meta_addr)"/>
        </structure>
        <structure name="s_instr_header" id="7" length="0" alignment="1" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <binary name="KW_INST" id="35" length="4"/>
            <number name="full_size" id="36" type="integer" length="4" display="hex"/>
            <number name="HW_version" id="37" type="integer" length="2"/>
            <number name="SW_version" id="38" type="integer" length="2"/>
            <number name="mapping_addr" id="39" type="integer" length="4" display="hex"/>
            <binary name="KW_META" id="40" length="4"/>
            <number name="meta_addr" id="41" type="integer" length="4" display="hex"/>
            <binary name="instr_dummy" id="42" length="8"/>
        </structure>
        <structure name="sound_instr" id="9" length="1888" alignment="1" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <grammarref name="s_instrument" id="303" filename="info_instr.grammar"/>
            <number name="s_presetnum" id="46" type="integer" length="1"/>
            <binary name="align" id="47" length="3"/>
            <grammarref name="preset_instr" id="304" repeatmin="4" repeatmax="4" filename="preset_instr.grammar"/>
            <string name="s_complete_name" id="50" type="fixed-length" length="32"/>
            <binary name="s_extra" id="51" length="600"/>
        </structure>
        <structure name="dream_ip" id="18" length="6" alignment="0" repeatmax="-1" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <number name="min_vel" id="247" type="integer" length="1"/>
            <number name="start_note" id="248" type="integer" length="1"/>
            <number name="max_vel" id="249" type="integer" length="1"/>
            <number name="end_note" id="250" type="integer" length="1"/>
            <number name="dream_sp_addr" id="251" type="integer" length="2" display="hex"/>
        </structure>
        <structure name="dream_sp" id="22" length="84" alignment="1" repeatmax="-1" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <binary name="align1" id="253" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="0000"/>
                </fixedvalues>
            </binary>
            <number name="address1" id="254" type="integer" length="2" display="hex"/>
            <number name="loopType" id="255" type="integer" length="2" display="hex"/>
            <number name="address2" id="256" type="integer" length="2" display="hex"/>
            <number name="address3" id="257" type="integer" length="2" display="hex"/>
            <binary name="unknown1" mustmatch="yes" id="258" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="F0B5"/>
                </fixedvalues>
            </binary>
            <binary name="unknown2" mustmatch="yes" id="259" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="1408"/>
                </fixedvalues>
            </binary>
            <binary name="unknown3" mustmatch="yes" id="260" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="00FF"/>
                </fixedvalues>
            </binary>
            <binary name="unknown4" mustmatch="yes" id="261" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="3210"/>
                </fixedvalues>
            </binary>
            <binary name="unknown5" mustmatch="yes" id="262" length="1">
                <fixedvalues>
                    <fixedvalue name="value" value="04"/>
                </fixedvalues>
            </binary>
            <number name="volume_amplifier" id="263" type="integer" length="1"/>
            <binary name="unknown6" id="264" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="8100"/>
                </fixedvalues>
            </binary>
            <number name="fine_tune" id="265" type="integer" length="1"/>
            <number name="coarse_tune" id="266" type="integer" length="1"/>
            <binary name="align2" mustmatch="yes" id="267" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="0000"/>
                </fixedvalues>
            </binary>
            <number name="loop_start" id="268" type="integer" length="4" display="hex"/>
            <binary name="align3" mustmatch="yes" id="269" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="0000"/>
                </fixedvalues>
            </binary>
            <number name="wav_address" id="270" type="integer" length="4" endian="little" display="hex"/>
            <number name="volume_mixer1" id="271" type="integer" length="2" display="hex"/>
            <number name="loop_end" id="272" type="integer" length="4" display="hex"/>
            <binary name="unknown7" mustmatch="yes" id="273" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="0E7F"/>
                </fixedvalues>
            </binary>
            <binary name="unknown8" mustmatch="yes" id="274" length="1">
                <fixedvalues>
                    <fixedvalue name="value" value="06"/>
                </fixedvalues>
            </binary>
            <number name="amplitude_osc_amp" id="275" type="integer" length="1"/>
            <number name="volume_mixer2" id="276" type="integer" length="2" display="hex"/>
            <number name="init" id="277" type="integer" length="2" display="hex"/>
            <number name="attack" id="278" type="integer" length="2" display="hex"/>
            <number name="decay" id="279" type="integer" length="2" display="hex"/>
            <number name="release" id="280" type="integer" length="2" display="hex"/>
            <binary name="unknown13" mustmatch="yes" id="281" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="0104"/>
                </fixedvalues>
            </binary>
            <binary name="unknown14" mustmatch="yes" id="282" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="000F"/>
                </fixedvalues>
            </binary>
            <binary name="unknown15" mustmatch="yes" id="283" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="1500"/>
                </fixedvalues>
            </binary>
            <binary name="unknown16" mustmatch="yes" id="284" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="0304"/>
                </fixedvalues>
            </binary>
            <binary name="unknown17" mustmatch="yes" id="285" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="1000"/>
                </fixedvalues>
            </binary>
            <binary name="unknown18" mustmatch="yes" id="286" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="0102"/>
                </fixedvalues>
            </binary>
            <binary name="unknown19" mustmatch="yes" id="287" length="4">
                <fixedvalues>
                    <fixedvalue name="value" value="00000000"/>
                </fixedvalues>
            </binary>
            <binary name="unknown20" mustmatch="yes" id="288" length="4">
                <fixedvalues>
                    <fixedvalue name="value" value="00000000"/>
                </fixedvalues>
            </binary>
            <binary name="unknown21" mustmatch="yes" id="289" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="0000"/>
                </fixedvalues>
            </binary>
            <binary name="unknown22" mustmatch="yes" id="290" length="2">
                <fixedvalues>
                    <fixedvalue name="value" value="0200"/>
                </fixedvalues>
            </binary>
            <number name="size_wav" id="291" type="integer" length="4"/>
        </structure>
        <structure name="s_note" id="27" length="32" repeatmin="0" repeatmax="-1" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <number name="note_gmref" id="293" type="integer" length="1"/>
            <number name="note_excl" id="294" type="integer" length="1"/>
            <number name="note_off" id="295" type="integer" length="1"/>
            <number name="note_key" id="296" type="integer" length="1"/>
            <string name="note_name" id="297" type="fixed-length" length="16"/>
            <string name="cat_name" id="298" type="fixed-length" length="12"/>
        </structure>
        <structure name="Elements" id="300" encoding="ISO_8859-1:1987" endian="little" signed="no">
            <binary name="Sample" id="301" length="remaining"/>
        </structure>
    </grammar>
</ufwb>
